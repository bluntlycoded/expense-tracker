{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/we/expense-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ExpenseList from './ExpenseList';\nimport ExpenseForm from './ExpenseForm';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const addExpense = newExpense => {\n    setExpenses([...expenses, newExpense]);\n  };\n  useEffect(() => {\n    // Update the chart whenever expenses change\n    const ctx = document.getElementById('pieChart').getContext('2d');\n    const expensesByCategory = {};\n    expenses.forEach(expense => {\n      if (!expensesByCategory[expense.category]) {\n        expensesByCategory[expense.category] = 0;\n      }\n      expensesByCategory[expense.category] += expense.amount;\n    });\n    const chartData = {\n      labels: Object.keys(expensesByCategory),\n      datasets: [{\n        data: Object.values(expensesByCategory),\n        backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)'\n        // Add more colors as needed\n        ]\n      }]\n    };\n    new Chart(ctx, {\n      type: 'pie',\n      data: chartData\n    });\n  }, [expenses]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      addExpense: addExpense\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n      expenses: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XCaxB2DEspMpdgcH+IrrPBpyP4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ExpenseList","ExpenseForm","Bar","jsxDEV","_jsxDEV","App","_s","expenses","setExpenses","addExpense","newExpense","ctx","document","getElementById","getContext","expensesByCategory","forEach","expense","category","amount","chartData","labels","Object","keys","datasets","data","values","backgroundColor","Chart","type","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/we/expense-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ExpenseList from './ExpenseList';\nimport ExpenseForm from './ExpenseForm';\nimport { Bar } from 'react-chartjs-2';\n\nconst App = () => {\n  const [expenses, setExpenses] = useState([]);\n\n  const addExpense = (newExpense) => {\n    setExpenses([...expenses, newExpense]);\n  };\n\n  useEffect(() => {\n    // Update the chart whenever expenses change\n    const ctx = document.getElementById('pieChart').getContext('2d');\n    const expensesByCategory = {};\n    expenses.forEach((expense) => {\n      if (!expensesByCategory[expense.category]) {\n        expensesByCategory[expense.category] = 0;\n      }\n      expensesByCategory[expense.category] += expense.amount;\n    });\n\n    const chartData = {\n      labels: Object.keys(expensesByCategory),\n      datasets: [\n        {\n          data: Object.values(expensesByCategory),\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.6)',\n            'rgba(54, 162, 235, 0.6)',\n            'rgba(255, 206, 86, 0.6)',\n            // Add more colors as needed\n          ],\n        },\n      ],\n    };\n\n    new Chart(ctx, {\n      type: 'pie',\n      data: chartData,\n    });\n  }, [expenses]);\n\n  return (\n    <div>\n      <h1>Expense Tracker</h1>\n      <ExpenseForm addExpense={addExpense} />\n      <ExpenseList expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,UAAU,GAAIC,UAAU,IAAK;IACjCF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,UAAU,CAAC,CAAC;EACxC,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;IAChE,MAAMC,kBAAkB,GAAG,CAAC,CAAC;IAC7BR,QAAQ,CAACS,OAAO,CAAEC,OAAO,IAAK;MAC5B,IAAI,CAACF,kBAAkB,CAACE,OAAO,CAACC,QAAQ,CAAC,EAAE;QACzCH,kBAAkB,CAACE,OAAO,CAACC,QAAQ,CAAC,GAAG,CAAC;MAC1C;MACAH,kBAAkB,CAACE,OAAO,CAACC,QAAQ,CAAC,IAAID,OAAO,CAACE,MAAM;IACxD,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAG;MAChBC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACR,kBAAkB,CAAC;MACvCS,QAAQ,EAAE,CACR;QACEC,IAAI,EAAEH,MAAM,CAACI,MAAM,CAACX,kBAAkB,CAAC;QACvCY,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,EACzB;QACA;QAAA;MAEJ,CAAC;IAEL,CAAC;IAED,IAAIC,KAAK,CAACjB,GAAG,EAAE;MACbkB,IAAI,EAAE,KAAK;MACXJ,IAAI,EAAEL;IACR,CAAC,CAAC;EACJ,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB9B,OAAA,CAACH,WAAW;MAACQ,UAAU,EAAEA;IAAW;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvC9B,OAAA,CAACJ,WAAW;MAACO,QAAQ,EAAEA;IAAS;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA9CID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}