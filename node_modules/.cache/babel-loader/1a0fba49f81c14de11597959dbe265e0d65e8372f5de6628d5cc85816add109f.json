{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/we/expense-tracker/src/ExpenseList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { Doughnut } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseList = ({\n  expenses\n}) => {\n  _s();\n  // Calculate expenses by category\n  const expensesByCategory = {};\n  expenses.forEach(expense => {\n    if (!expensesByCategory[expense.category]) {\n      expensesByCategory[expense.category] = 0;\n    }\n    expensesByCategory[expense.category] += expense.amount;\n  });\n\n  // Prepare data for the pie chart\n  const chartData = {\n    labels: Object.keys(expensesByCategory),\n    datasets: [{\n      data: Object.values(expensesByCategory),\n      backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)'\n      // Add more colors as needed\n      ]\n    }]\n  };\n  useEffect(() => {\n    // Update the chart whenever expenses change\n    const ctx = document.getElementById('pieChart').getContext('2d');\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    new Chart(ctx, {\n      type: 'pie',\n      data: chartData\n    });\n  }, [expenses, chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expense Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        children: Object.keys(expensesByCategory).map(category => /*#__PURE__*/_jsxDEV(Tab, {\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), Object.keys(expensesByCategory).map(category => /*#__PURE__*/_jsxDEV(TabPanel, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [category, \" Expenses\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: expenses.filter(expense => expense.category === category).map(expense => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [expense.description, \": \\u20B9\", expense.amount.toFixed(2)]\n          }, expense.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Expense Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ExpenseList;\nexport default ExpenseList;\nvar _c;\n$RefreshReg$(_c, \"ExpenseList\");","map":{"version":3,"names":["React","useEffect","useState","Tab","Tabs","TabList","TabPanel","Doughnut","Chart","jsxDEV","_jsxDEV","ExpenseList","expenses","_s","expensesByCategory","forEach","expense","category","amount","chartData","labels","Object","keys","datasets","data","values","backgroundColor","ctx","document","getElementById","getContext","existingChart","getChart","destroy","type","children","fileName","_jsxFileName","lineNumber","columnNumber","map","filter","description","toFixed","id","style","marginTop","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/we/expense-tracker/src/ExpenseList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { Doughnut } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\n\nconst ExpenseList = ({ expenses }) => {\n  // Calculate expenses by category\n  const expensesByCategory = {};\n  expenses.forEach((expense) => {\n    if (!expensesByCategory[expense.category]) {\n      expensesByCategory[expense.category] = 0;\n    }\n    expensesByCategory[expense.category] += expense.amount;\n  });\n\n  // Prepare data for the pie chart\n  const chartData = {\n    labels: Object.keys(expensesByCategory),\n    datasets: [\n      {\n        data: Object.values(expensesByCategory),\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.6)',\n          'rgba(54, 162, 235, 0.6)',\n          'rgba(255, 206, 86, 0.6)',\n          // Add more colors as needed\n        ],\n      },\n    ],\n  };\n\n  useEffect(() => {\n    // Update the chart whenever expenses change\n    const ctx = document.getElementById('pieChart').getContext('2d');\n    const existingChart = Chart.getChart(ctx);\n\n    if (existingChart) {\n      existingChart.destroy();\n    }\n\n    new Chart(ctx, {\n      type: 'pie',\n      data: chartData,\n    });\n  }, [expenses, chartData]);\n\n  return (\n    <div>\n      <h2>Expense Summary</h2>\n      <Tabs>\n        <TabList>\n          {Object.keys(expensesByCategory).map((category) => (\n            <Tab key={category}>{category}</Tab>\n          ))}\n        </TabList>\n        {Object.keys(expensesByCategory).map((category) => (\n          <TabPanel key={category}>\n            <h3>{category} Expenses</h3>\n            <ul>\n              {expenses\n                .filter((expense) => expense.category === category)\n                .map((expense) => (\n                  <li key={expense.id}>\n                    {expense.description}: â‚¹{expense.amount.toFixed(2)}\n                  </li>\n                ))}\n            </ul>\n          </TabPanel>\n        ))}\n      </Tabs>\n      <div style={{ marginTop: '20px' }}>\n        <h2>Expense Distribution</h2>\n        <Doughnut data={chartData} />\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}